name: e2e Tests

on:
  pull_request:
    branches:
      - main
      - 'incubation'
    paths-ignore:
      - 'docs/**'
      - '**.adoc'
      - '**.md'
      - 'LICENSE'
  push:
    branches:
      - main
      - 'incubation'
    paths-ignore:
      - 'docs/**'
      - '**.adoc'
      - '**.md'
      - 'LICENSE'
concurrency:
  group: ${{ github.head_ref }}-${{ github.workflow }}
  cancel-in-progress: true

env:
  QUAY_ORG: ${{ secrets.QUAY_ORG}}
  IMAGE_REGISTRY: quay.io
  BUNDLE_IMAGE_NAME: opendatahub-operator-bundle
  IMAGE_NAME: opendatahub-operator
  IMAGE_TAG: pr-4 #pr-${{ github.event.pull_request.number }}

jobs:
  kubernetes-e2e:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.19

      - name: Login to Quay.io
        uses: docker/login-action@v2
        with:
          registry: ${{ env.IMAGE_REGISTRY}}
          username: ${{ secrets.QUAY_ID }}
          password: ${{ secrets.QUAY_TOKEN }}

      - name: Build Operator Bundle
        run: |
          # Pull the image from registry

          while true
          do
            echo "Pulling image from Quay.io";
            sleep 10

            if docker pull quay.io/${{ env.QUAY_ORG }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
            then
              break
            fi

          done

          # Build operator bundle image
          make bundle-build -e BUNDLE_IMG=quay.io/${{ env.QUAY_ORG }}/${{ env.BUNDLE_IMAGE_NAME }}:${{ env.IMAGE_TAG }} \
          -e IMG=quay.io/${{ env.QUAY_ORG }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} IMAGE_BUILDER=docker

      - name: Push Operator Bundle Image
        run:  |
          docker push quay.io/${{ env.QUAY_ORG }}/${{ env.BUNDLE_IMAGE_NAME }}:${{ env.IMAGE_TAG }}
     
      - name: Setup and start KinD cluster
        uses: ./.github/actions/kind

      - name: Verify KinD
        run:  |
          export KUBECONFIG="$(kind get kubeconfig-path --name="kind-cluster")"
          kind get clusters
          kubectl get nodes -o wide

      - name: Load Image in KinD cluster
        run: |
          #docker save docker.io/kindest/node:v1.28.0 -o quay.io/${{ env.QUAY_ORG }}/${{ env.BUNDLE_IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          kind load docker-image quay.io/${{ env.QUAY_ORG }}/${{ env.BUNDLE_IMAGE_NAME }}:${{ env.IMAGE_TAG }} --name kind-cluster
    
          # reg_name='kind-registry'
          # REGISTRY_DIR="/etc/containerd/certs.d/${REGISTRY_ADDRESS}"
          # for node in $(kind get nodes); do
          #   docker exec "${node}" mkdir -p "${REGISTRY_DIR}"
          #   cat <<EOF | docker exec -i "${node}" cp /dev/stdin "${REGISTRY_DIR}/hosts.toml"
          # [host."${REGISTRY_ADDRESS}"]
          # EOF
          # done

          # docker network connect "kind-cluster" "${reg_name}"

          # docker tag quay.io/${{ env.QUAY_ORG }}/${{ env.BUNDLE_IMAGE_NAME }}:${{ env.IMAGE_TAG }} $REGISTRY_ADDRESS/${{ env.BUNDLE_IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          # docker push $REGISTRY_ADDRESS/${{ env.BUNDLE_IMAGE_NAME }}:${{ env.IMAGE_TAG }}

          docker exec -t kind-cluster-control-plane crictl images

          docker network ls
      
      - name: Deploy Operatorhub operator
        id: deploy
        run: |
          echo Deploying Operatorhub operator
          # IMG="${REGISTRY_ADDRESS}"/${{ env.BUNDLE_IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          IMG=quay.io/${{ env.QUAY_ORG }}/${{ env.BUNDLE_IMAGE_NAME }}:${{ env.IMAGE_TAG }}

          make deploy -e IMG="${IMG}"
          kubectl wait --timeout=120s --for=condition=Available=true deployment -n opendatahub-operator-system

          kubectl get nodes -o wide
          kubectl get pods --all-namesapces
          kubectl get services --all-namesapces -o wide

      - name: Run e2e tests
        run: |
          make e2e-test

      - name: Clean up KinD cluster
        run:  |
          kind delete cluster --name kind-cluster
